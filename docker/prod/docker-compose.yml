version: '3.9'

services:   
  reverse-proxy:
    image: caddy/caddy:alpine
    container_name: reverse-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy_data:/data
      - caddy_config:/config
      - $PWD/Caddyfile:/etc/caddy/Caddyfile
      - $PWD/certs:/data/certs
    depends_on:
      - app

  app:
    build:
      context: ../../
      dockerfile: docker/prod/Dockerfile
    hostname: app
    container_name: app
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
  
  db:
    container_name: db
    hostname: db
    restart: unless-stopped
    image: postgres:alpine
    volumes:
      - ./data/pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev
    ports:
      - "5432:5432"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready --dbname db --username dev"
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    container_name: redis
    hostname: redis
    restart: unless-stopped
    image: 'redis:alpine'
    volumes:
      - ./data/redis:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5

volumes:
  caddy_data:
  caddy_config:
  redis: